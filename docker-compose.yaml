version: '3.8'

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    healthcheck:      
      test: ["CMD", "curl", "-f", "http://localhost:9870"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./data:/data
    environment:
      - CLUSTER_NAME=hadoop-cluster
    env_file:
      - ./hadoop.env
    networks:
      - hadoop_network

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
    networks:
      - hadoop_network

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    ports:
      - "10000:10000"
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://postgres:5432/hive_metastore"
      HIVE_CORE_CONF_javax_jdo_option_ConnectionDriverName: "org.postgresql.Driver"
      HIVE_CORE_CONF_javax_jdo_option_ConnectionUserName: "airflow"
      HIVE_CORE_CONF_javax_jdo_option_ConnectionPassword: "airflow"
      SERVICE_PRECONDITION: "namenode:9870 datanode:9864 postgres:5432"
    volumes:
      - ./config/hive:/opt/hive/conf
    depends_on:
      postgres:
        condition: service_healthy
      namenode:
        condition: service_healthy
      datanode:
        condition: service_started
    networks:
      - hadoop_network

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9870 datanode:9864"
    networks:
      - hadoop_network
  spark-master:
    image: bde2020/spark-master:3.1.1-hadoop3.2
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./scripts:/scripts
      - ./data:/data
    networks:
      - hadoop_network
  spark-worker:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    volumes:
      - ./scripts:/scripts
      - ./data:/data
    networks:
      - hadoop_network

 

  airflow-init:
    image: apache/airflow:2.6.3
    container_name: airflow-init
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY:-}
    command: bash -c "pip install psycopg2-binary pandas openpyxl && airflow db init && airflow users create --firstname admin --lastname admin --email admin@example.com --password admin --username admin --role Admin"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./config/airflow:/opt/airflow/config
      - ./logs:/opt/airflow/logs
      - ./data:/data
      - ./scripts:/scripts
    networks:
      - hadoop_network

  airflow-webserver:
    image: apache/airflow:2.6.3
    container_name: airflow-webserver
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY:-}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./config/airflow:/opt/airflow/config
      - ./logs:/opt/airflow/logs
      - ./data:/data
      - ./scripts:/scripts
    ports:
      - "8081:8080"
    command: bash -c "pip install psycopg2-binary pandas openpyxl apache-airflow-providers-apache-spark && airflow webserver"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - hadoop_network

  airflow-scheduler:
    image: apache/airflow:2.6.3
    container_name: airflow-scheduler
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY:-}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./config/airflow:/opt/airflow/config
      - ./logs:/opt/airflow/logs
      - ./data:/data
      - ./scripts:/scripts
    command: bash -c "pip install psycopg2-binary pandas openpyxl apache-airflow-providers-apache-spark && airflow scheduler"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - hadoop_network
  postgres:
    image: postgres:13
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - hadoop_network

  superset-redis:
    image: redis:7.0
    container_name: superset-redis
    restart: unless-stopped
    networks:
      - hadoop_network

  superset:
    image: apache/superset:latest
    container_name: superset
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      superset-redis:
        condition: service_started
    ports:
      - "8088:8088"
    environment:
      - SUPERSET_CONFIG_PATH=/app/pythonpath/superset_config.py
      - REDIS_HOST=superset-redis
      - REDIS_PORT=6379
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_DB=superset
      - DATABASE_USER=airflow
      - DATABASE_PASSWORD=airflow
    volumes:
      - ./config/superset:/app/pythonpath
      - superset_data:/app/superset_home
    command: >
      bash -c "
        pip install psycopg2-binary &&
        superset fab create-admin --username admin --firstname Admin --lastname User --email admin@superset.com --password admin &&
        superset db upgrade &&
        superset init &&
        superset run -h 0.0.0.0 -p 8088 --with-threads --reload --debugger
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - hadoop_network

volumes:
  hadoop_namenode:
  hadoop_datanode:
  postgres_data:
  superset_data:

networks:
  hadoop_network:
    driver: bridge
